
【一主一从 主从服务】

构建思路
·配置主服务器
--启用binlog日志 授权用户 设置server_id 查看binlog日志信息
·配置从服务器
--设置server_id
--确保与主服务器的数据一致
--指定主数据库信息
--启动slave程序
--查看状态信息

配置主服务器
修改主配置文件

启用binlog日志 并重启服务
]vim /etc/my.cnf
[mysqld]
log_bin=日志名			//启用binlog日志
server_id=id值			//指定服务器id
] systemctl restart mysqld	//重启服务

·授权用户
--用户权限replication  slave
--用户名自定义
--客户端地址允许从服务器连接
--密码自定义
>grant replication slave on *.* to 用户名@”%“ identified by "密码"；
> show master status \G		//查看主服务器日志信息
> show master status;		//查看binlog日志信息	


配置从服务器
·确保与主服务器数据一致
--在主服务器上备份数据 将备份文件拷贝给从服务器
--从服务器使用备份文件恢复数据
--在从服务器上查看备份文件记录的binlog日志文件

]#mysqldump -uroot -p密码 --master-data 库名 > /文件名		//主库备份数据 --master-data记录当前对应的日志信息
cp /文件名	root@目标IP地址：/								//从服务器使用备份文件恢复数据
]#mysql -uroot -p密码 数据名 < /传过来存放的路径
vim /备份文件

配置从服务器
·指定主服务器信息
> change master to 
>master_host="主服务器IP地址"，
>master_user="主服务器授权的用户"，
>master_password="授权用户的密码"，
>master_log_file="主服务器的binlog日志",
>master_log_pos=binlog日志的偏移值；

·查看slave状态
--确认io线程 sql线程都是yes的状态
> show slave status \G			//里面同样含有报错的日志信息

配置从服务器
·相关文件
--存放在数据库目录下（/var/lib/mysql/）
master.info				//主库信息
relay-log.info			//中继日志
主机名-relay-bin.xxx	//中继日志
主机名-relay-bin.index	//索引 文件
（删除以上文件 重启数据库服务 可把主机恢复为独立的数据库服务器）


常见错误（和处理方法）
Slave_IO_Running 报错 
Last_IO_Error: 报错信息

mysql> stop   slave ;
mysql> change master to  配置项="值"，配置项=值 ;	//show slave status \G 根据报错信息修改单个错误的的信息
mysql> start  slave 
如果有 sql命令里同名的库 表 提示已存在 exists ，把其删除
如果执行sql命令里的库或表 不存在 要手动创建出来


配置主从从数据库服务
++++++配置mysql 主从从同步结构

//把数据服务器192.168.4.53 恢复独立的数据库服务器
[root@mysql53 mysql]# rm -rf master.info  relay-log.info  mysql53-relay-bin.*
[root@mysql53 mysql]# systemctl  restart mysqld									//重启服务

配置主数据库服务器 192.168.4.53
]# /etc/my.cnf
[mysqld]
server_id=53
log_bin=master53
[root@mysql53 mysql]# systemctl  restart mysqld											//重启服务
mysql> grant replication slave on  *.*  to  repluser@"%" identified by "123qqq...A" ;	//授权用户
mysql> show master status;																//查看binlog日志信息


配置数据库服务器192.168.4.54 		//中间既是主服务器优质从服务器
[root@mysql54 ~]# vim /etc/my.cnf 
[mysqld]
server_id=54
log_bin=db54
log_slave_updates					//开启可以在同步主服务器数据时 把中继日志复制到本机的binlog日志内

[root@mysql54 ~]# systemctl  restart mysqld	//重启服务
mysql> grant replication slave on *.* to plj@"%" identified by "123qqq...A";	//授权用户
mysql> change master to  master_host="192.168.4.53" , master_user="repluser" , master_password="123qqq...A" , master_log_file="master53.000001" , master_log_pos=441;						  //填写主服务器信息
ysql> start slave ;							//激活服务
ysql> show master status ;					//查看binlog日志信息


最后一台从服务器和正常的从服务i其配置一样

主主服务器 两台服务器即使对方的主也是方的从服务器

配置思路
两台服务器同时打开binlog日志
同步两台数据库的数据
两台服务器分别授权一个用户
直接配置从服务就可以0k









【主从模式--配置MySQL半同步复制模式 】注释：主从结构配置半同步复制模式时 有多少台通服务器都要同时安装 从服务器模块


配置步骤：//在主服务器上配置
]# mysql -uroot -p123qqq...A -e 'show  variables  like  "have_dynamic_loading"'		//查看是否允许动态安装模块

命令行安装	//马上生效不需要重启服务，重启服务配置会还原
 mysql> install  plugin  rpl_semi_sync_master   SONAME  "semisync_master.so";
查看模块是否安装成功
> select  plugin_name, plugin_status from  information_schema.plugins  where plugin_name like '%semi%';  	
+----------------------+---------------+

| plugin_name          | plugin_status |

+----------------------+---------------+

| rpl_semi_sync_master | ACTIVE        |

+----------------------+---------------+
命令行启用
mysql> set  global rpl_semi_sync_master_enabled=1; 
查看模块是否启用
mysql> show  variables  like  "rpl_semi_sync_%_enabled"; 


永久启用
[root@mysql53 mysql]# vim /etc/my.cnf
[mysqld]
plugin-load=rpl_semi_sync_master=semisync_master.so 永久配置，在配置文件里设置加载模块的选项
rpl_semi_sync_master_enabled=1  启用 



配置步骤：//在从服务器上配置（配置从数据库服务器192.168.4.55 为半同步复制模式）
命令行安装	//马上生效不需要重启服务，重启服务配置会还原
安装从服务模块
mysql> install  plugin  rpl_semi_sync_slave   SONAME  "semisync_slave.so";
激活嘲从服务模块
mysql> set  global rpl_semi_sync_slave_enabled=1;
查看从服务器的激活状态
mysql> show  variables  like  "rpl_semi_sync_%_enabled";

+-----------------------------+-------+

| Variable_name               | Value |

+-----------------------------+-------+

| rpl_semi_sync_slave_enabled | ON    |

+-----------------------------+-------+


配置文件添加配置文件永久有效从服务

[root@mysql55 ~]# vim /etc/my.cnf

[mysqld]
plugin-load=rpl_semi_sync_slave=semisync_slave.so
rpl_semi_sync_slave_enabled=1




配置步骤：//在即使主服务器也是从服务器上配置（配置从数据库服务器192.168.4.55 为半同步复制模式）

安装主服务器模块和从服务模块
mysql>  install  plugin  rpl_semi_sync_master   SONAME  "semisync_master.so";
mysql>  install  plugin  rpl_semi_sync_slave   SONAME  "semisync_slave.so";

激活主服务器模块和从服务器模块
set  global rpl_semi_sync_master_enabled=1; 
set  global rpl_semi_sync_slave_enabled=1;

查看状态
mysql> show  variables  like  "rpl_semi_sync_%_enabled";
+------------------------------+-------+

| Variable_name                | Value |

+------------------------------+-------+

| rpl_semi_sync_master_enabled | ON    |

| rpl_semi_sync_slave_enabled  | ON    |

+------------------------------+-------+

修改配置文件（永久配置）

]# vim /etc/my.cnf
[mysqld]
plugin-load= "rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
rpl_semi_sync_master_enabled=1
rpl_semi_sync_slave_enabled=1
需要重启服务













































